<Window x:Class="WpfDicomViewerDemo.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cc="clr-namespace:WpfDicomViewerDemo"
    xmlns:ImagingControls="clr-namespace:Vintasoft.Imaging.Wpf.UI;assembly=Vintasoft.Imaging.Wpf.UI"
    xmlns:vsdui="clr-namespace:Vintasoft.Imaging.Dicom.Wpf.UI;assembly=Vintasoft.Imaging.Dicom.Wpf.UI"
    xmlns:CustomConstrols="clr-namespace:WpfDemosCommonCode.Imaging"        
    xmlns:vsui="clr-namespace:Vintasoft.Imaging.Wpf.UI;assembly=Vintasoft.Imaging.Wpf.UI"
    xmlns:DicomViewerDemoControls="clr-namespace:WpfDicomViewerDemo"
    xmlns:DicomViewerImaging="clr-namespace:WpfDemosCommonCode.Imaging"        
    Title="VintaSoft WPF Dicom Demo" 
    Width="826" Height="670"
    MinWidth="360" MinHeight="320"
    WindowStartupLocation="CenterScreen"
    Closing="Window_Closing">
    <Window.Resources>
        <Style TargetType="vsui:ThumbnailImageItem" x:Key="ThumbnailItemStyle">
            <Setter Property="Border">
                <Setter.Value>
                    <Pen Brush="#60000000" Thickness="1"/>
                </Setter.Value>
            </Setter>
            <Setter Property="ThumbnailPadding" Value="2.5" />
            <Setter Property="ThumbnailImagePadding" Value="3" />
            <Setter Property="ThumbnailForeground">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" Opacity="1">
                        <GradientStop Color="#30000000" Offset="0.0" />
                        <GradientStop Color="#D0000000" Offset="1.0" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="ThumbnailBackground" Value="Transparent" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="SelectionBorder">
                        <Setter.Value>
                            <Pen Brush="#B08090FF" Thickness="2"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property = "IsSelected" Value="true">
                    <Setter Property="ThumbnailBackground">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <GradientStop Color="#207080F0" Offset="0.0" />
                                <GradientStop Color="#B07080F0" Offset="1.0" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="ThumbnailForeground" Value="Transparent"/>
                    <Setter Property="Border">
                        <Setter.Value>
                            <Pen Brush="#D07080FF" Thickness="1"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property = "IsSelected" Value="false"/>
                        <Condition Property = "HasThumbnailImage" Value="false"/>
                        <Condition Property = "IsRendering" Value="false"/>
                        <Condition Property = "IsRendered" Value="false"/>
                    </MultiTrigger.Conditions>
                    <MultiTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="ThumbnailForeground.Opacity" To="1" Duration="0:0:0" />
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiTrigger.EnterActions>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property = "IsSelected" Value="false"/>
                        <Condition Property = "HasThumbnailImage" Value="false"/>
                        <Condition Property = "IsRendering" Value="true"/>
                        <Condition Property = "IsRendered" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property = "ThumbnailBackground">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <GradientStop Color="#10008000" Offset="0.0" />
                                <GradientStop Color="#30008000" Offset="1.0" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <MultiTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="ThumbnailForeground.Opacity" From="1" To="0" Duration="0:0:0.25" />
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiTrigger.EnterActions>
                    <MultiTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="ThumbnailImageBrush.Opacity" From="0" To="1" Duration="0:0:0.3" />
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiTrigger.ExitActions>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property = "IsSelected" Value="false"/>
                        <Condition Property = "HasThumbnailImage" Value="true"/>
                        <Condition Property = "IsRendering" Value="false"/>
                        <Condition Property = "IsRendered" Value="true"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ThumbnailBackground">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <GradientStop Color="#10008000" Offset="0.0" />
                                <GradientStop Color="#30008000" Offset="1.0" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="ThumbnailForeground" Value="Transparent"/>
                </MultiTrigger>
                <Trigger Property = "IsFocused" Value="true">
                    <Setter Property="Border">
                        <Setter.Value>
                            <Pen Brush="Black" Thickness="1">
                                <Pen.DashStyle>
                                    <DashStyle Dashes="1,2"/>
                                </Pen.DashStyle>
                            </Pen>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <BitmapImage x:Key="VoiLutIcon" UriSource="Resources/VOI_LUT.png" />
    </Window.Resources>

    <Window.CommandBindings>
        <CommandBinding x:Name="openCommandBinding" Command="{x:Static cc:MainWindow._openCommand}" CanExecute="openCommandBinding_CanExecute" Executed="openDicomFilesMenuItem_Click"/>
        <CommandBinding x:Name="closeCommandBinding" Command="{x:Static cc:MainWindow._closeCommand}" CanExecute="closeCommandBinding_CanExecute" Executed="closeDicomSeriesMenuItem_Click"/>
        <CommandBinding x:Name="exitCommandBinding" Command="{x:Static cc:MainWindow._exitCommand}" CanExecute="exitCommandBinding_CanExecute" Executed="exitMenuItem_Click"/>

        <CommandBinding x:Name="fullScreenCommandBinding" Command="{x:Static cc:MainWindow._fullScreenCommand}" Executed="fullScreenMenuItem_Click" />
        <CommandBinding x:Name="showScrollbarsCommandBinding" Command="{x:Static cc:MainWindow._showScrollbarsCommand}" Executed="showScrollbarsMenuItem_Click" />
        <CommandBinding x:Name="isNegativeCommandBinding" Command="{x:Static cc:MainWindow._isNegativeCommand}" CanExecute="isNegativeCommandBinding_CanExecute" Executed="negativeImageMenuItem_Click"/>

        <CommandBinding x:Name="cutCommandBinding" Command="{x:Static cc:MainWindow._cutCommand}" CanExecute="cutCommandBinding_CanExecute" Executed="cutMenuItem_Click"/>
        <CommandBinding x:Name="copyCommandBinding" Command="{x:Static cc:MainWindow._copyCommand}" CanExecute="copyCommandBinding_CanExecute" Executed="copyMenuItem_Click"/>
        <CommandBinding x:Name="pasteCommandBinding" Command="{x:Static cc:MainWindow._pasteCommand}" CanExecute="pasteCommandBinding_CanExecute" Executed="pasteMenuItem_Click"/>
        <CommandBinding x:Name="deleteCommandBinding" Command="{x:Static cc:MainWindow._deleteCommand}" CanExecute="deleteCommandBinding_CanExecute" Executed="deleteMenuItem_Click"/>
        <CommandBinding x:Name="deleteAllCommandBinding" Command="{x:Static cc:MainWindow._deleteAllCommand}" CanExecute="deleteAllCommandBinding_CanExecute" Executed="deleteAllMenuItem_Click"/>

        <CommandBinding x:Name="rotateClockwiseCommandBinding" Command="{x:Static cc:MainWindow._rotateClockwiseCommand}" CanExecute="rotateClockwiseCommandBinding_CanExecute" Executed="rotateClockwiseMenuItem_Click"/>
        <CommandBinding x:Name="rotateCounterclockwiseCommandBinding" Command="{x:Static cc:MainWindow._rotateCounterclockwiseCommand}" CanExecute="rotateCounterclockwiseCommandBinding_CanExecute" Executed="rotateCounterclockwiseMenuItem_Click"/>

        <CommandBinding Command="{x:Static cc:MainWindow._aboutCommand}" Executed="help_aboutMenuItem_Click"/>
    </Window.CommandBindings>

    <Window.InputBindings>
        <KeyBinding Command="{x:Static cc:MainWindow._openCommand}" Modifiers="CTRL" Key="O" />
        <KeyBinding Command="{x:Static cc:MainWindow._closeCommand}" Modifiers="CTRL" Key="W" />
        <KeyBinding Command="{x:Static cc:MainWindow._exitCommand}" Modifiers="ALT" Key="X" />

        <KeyBinding Command="{x:Static cc:MainWindow._fullScreenCommand}" Key="F5" />
        <KeyBinding Command="{x:Static cc:MainWindow._showScrollbarsCommand}" Key="F6" />
        <KeyBinding Command="{x:Static cc:MainWindow._isNegativeCommand}" Key="F11" />

        <KeyBinding Command="{x:Static cc:MainWindow._cutCommand}" Modifiers="CTRL" Key="X" />
        <KeyBinding Command="{x:Static cc:MainWindow._copyCommand}" Modifiers="CTRL" Key="C" />
        <KeyBinding Command="{x:Static cc:MainWindow._pasteCommand}" Modifiers="CTRL" Key="V" />
        <KeyBinding Command="{x:Static cc:MainWindow._deleteCommand}" Key="DEL" />
        <KeyBinding Command="{x:Static cc:MainWindow._deleteAllCommand}" Modifiers="ALT" Key="DEL" />

        <KeyBinding Command="{x:Static cc:MainWindow._rotateClockwiseCommand}" Modifiers="CTRL+SHIFT" Key="OemPlus" />
        <KeyBinding Command="{x:Static cc:MainWindow._rotateCounterclockwiseCommand}" Modifiers="CTRL+SHIFT" Key="OemMinus" />
        <KeyBinding Command="{x:Static cc:MainWindow._rotateClockwiseCommand}" Modifiers="CTRL+SHIFT" Key="Add" />
        <KeyBinding Command="{x:Static cc:MainWindow._rotateCounterclockwiseCommand}" Modifiers="CTRL+SHIFT" Key="Subtract" />

        <KeyBinding Command="{x:Static cc:MainWindow._aboutCommand}"  Key="F1" />
    </Window.InputBindings>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Menu Grid.Row="0" Name="menu1">
            <MenuItem Header="File" Name="fileMenuItem">
                <MenuItem HeaderStringFormat="{}{0} (Ctrl+ O)" Header="Open DICOM File(s) ..." Name="openDicomFilesMenuItem" Click="openDicomFilesMenuItem_Click" />
                <MenuItem Header="Open Directory..." Name="openDirectoryMenuItem" Click="openDirectoryMenuItem_Click" />
                <Separator />
                <MenuItem Header="Save DICOM File To Image File..." Name="saveDicomFileToImageFileMenuItem" Click="saveDicomFileToImageFileMenuItem_Click" />
                <MenuItem Header="Burn And Save To DICOM file..." Name="burnAndSaveToDICOMFileMenuItem" Click="burnAndSaveToDICOMFileMenuItem_Click"/>
                <Separator />
                <MenuItem HeaderStringFormat="{}{0} (Ctrl+ W)" Header="Close DICOM File" Name="closeDicomSeriesMenuItem" Click="closeDicomSeriesMenuItem_Click" />
                <Separator />
                <MenuItem HeaderStringFormat="{}{0} (Alt+ X)" Header="Exit" Name="exitMenuItem" Click="exitMenuItem_Click" />
            </MenuItem>

            <MenuItem Header="Edit" Name="editMenuItem" SubmenuOpened="editMenuItem_SubmenuOpened" SubmenuClosed="editMenuItem_SubmenuClosed">
                <MenuItem HeaderStringFormat="{}{0} (Ctrl+ X)" Header="Cut" Name="cutMenuItem" Click="cutMenuItem_Click"/>
                <MenuItem HeaderStringFormat="{}{0} (Ctrl+ C)" Header="Copy" Name="copyMenuItem" Click="copyMenuItem_Click" />
                <MenuItem HeaderStringFormat="{}{0} (Ctrl+ V)" Header="Paste" Name="pasteMenuItem" Click="pasteMenuItem_Click" />
                <MenuItem HeaderStringFormat="{}{0} (Del)" Header="Delete" Name="deleteMenuItem" Click="deleteMenuItem_Click" />
                <MenuItem HeaderStringFormat="{}{0} (Alt+ Del)" Header="Delete All" Name="deleteAllMenuItem" Click="deleteAllMenuItem_Click" />
            </MenuItem>

            <MenuItem Header="View" Name="viewMenuItem">
                <MenuItem Header="Image Viewer Settings..." Name="imageViewerSettingsMenuItem" Click="imageViewerSettingsMenuItem_Click" />
                <MenuItem Header="Rotate View" Name="rotateViewModeMenuItem">
                    <MenuItem Header="Clockwise (Shift+Ctrl+Plus)" Name="rotateClockwiseMenuItem" Click="rotateClockwiseMenuItem_Click"/>
                    <MenuItem Header="Counterclockwise (Shift+Ctrl+Minus)" Name="rotateCounterclockwiseMenuItem" Click="rotateCounterclockwiseMenuItem_Click"/>
                </MenuItem>
                <Separator />
                <MenuItem HeaderStringFormat="{}{0} (F5)" Header="Full Screen" Name="fullScreenMenuItem" Click="fullScreenMenuItem_Click"/>
                <MenuItem HeaderStringFormat="{}{0} (F6)" Header="Show Scrollbars" Name="showScrollbarsMenuItem" IsChecked="True" Click="showScrollbarsMenuItem_Click"/>
                <Separator />
                <MenuItem Header="Show Overlay Images" Name="showOverlayImagesMenuItem" IsCheckable="True" Click="showOverlayImagesMenuItem_Click" />
                <MenuItem Header="Overlay Color..." Name="overlayColorMenuItem" Click="overlayColorMenuItem_Click" />
                <Separator />
                <MenuItem Header="Show Metadata In Viewer" Name="showMetadataInViewerMenuItem" IsChecked="True" Click="showMetadataOnViewerMenuItem_Click" />
                <MenuItem Header="Text Overlay Settings..." Name="textOverlaySettingsMenuItem" Click="textOverlaySettingsMenuItem_Click" />
                <Separator />
                <MenuItem Header="Show Rulers In Viewer" Name="showRulersInViewerMenuItem" Click="showRulersOnViewerMenuItem_Click" IsChecked="True" />
                <MenuItem Header="Rulers Color..." Name="rulersColorMenuItem" Click="rulersColorMenuItem_Click" />
                <MenuItem Header="Rulers Unit Of Measure" Name="rulersUnitOfMeasureMenuItem" Click="rulersUnitOfMeasureMenuItem_Click" />
                <Separator />
                <MenuItem Header="VOI LUT..." Name="voiLutMainMenuItem" Click="voiLutMainMenuItem_Click" />
                <MenuItem HeaderStringFormat="{}{0} (F11)" Header="Is Negative" Name="negativeImageMenuItem" Click="negativeImageMenuItem_Click"/>
                <MenuItem Header="VOI LUT Mouse Move Direction" Name="voiLutMouseMoveDirectionMenuItem">
                    <MenuItem Header="Width Horizontal Inverted, Center Vertical" Name="widthHorizontalInvertedCenterVerticalMenuItem" Click="widthHorizontalInvertedCenterVerticalMenuItem_Click" IsChecked="True"/>
                    <MenuItem Header="Width Horizontal, Center Vertical" Name="widthHorizontalCenterVerticalMenuItem" Click="widthHorizontalCenterVerticalMenuItem_Click" />
                    <MenuItem Header="Width Vertical, Center Horizontal" Name="widthVerticalCenterHorizontalMenuItem" Click="widthVerticalCenterHorizontalMenuItem_Click" />
                </MenuItem>
                <Separator />
                <MenuItem Header="Magnifier Settings..." Name="magnifierSettings" Click="magnifierSettings_Click">
                </MenuItem>
            </MenuItem>

            <MenuItem Header="Metadata" Name="metadataMenuItem">
                <MenuItem Header="File Metadata..." Name="fileMetadataMenuItem" Click="fileMetadataMenuItem_Click" />
            </MenuItem>

            <MenuItem Header="Page" Name="pageMenuItem" >
                <MenuItem Header="Overlay Images..." Name="overlayImagesMenuItem" Click="overlayImagesMenuItem_Click"/>
            </MenuItem>

            <MenuItem Header="Animation" Name="animationMenuItem" >
                <MenuItem Header="Show Animation" Name="showAnimationMenuItem" IsCheckable="True" Click="showAnimationMenuItem_Click"/>
                <MenuItem Header="Animation Delay" Name="animationDelayMenuItem" >
                    <ComboBox Name="animationDelay_valueComboBox" 
                              IsEditable="True"
                              Width="125"
                              TextBoxBase.TextChanged="animationDelayComboBox_TextChanged">
                        <ComboBoxItem>10</ComboBoxItem>
                        <ComboBoxItem IsSelected="True">100</ComboBoxItem>
                        <ComboBoxItem>1000</ComboBoxItem>
                        <ComboBoxItem>2000</ComboBoxItem>
                    </ComboBox>
                </MenuItem>
                <MenuItem Header="Animation Repeat" Name="animationRepeatMenuItem" IsCheckable="True" IsChecked="True" Click="animationRepeatMenuItem_Click"/>
                <MenuItem Header="Save as GIF file..." Name="saveAsGifFileToolStripMenuItem" Click="saveAsGifFileToolStripMenuItem_Click"/>
            </MenuItem>

            <MenuItem Header="Annotations" Name="annotationsMenuItem" SubmenuOpened="annotationsMenuItem_SubmenuOpened">
                <MenuItem Header="Info..." Name="infoMenuItem" Click="infoMenuItem_Click" />
                <Separator />
                <MenuItem Header="Interaction Mode" Name="interactionModeMenuItem">
                    <MenuItem Header="None" Name="interactionModeNoneMenuItem" Click="interactionModeNoneMenuItem_Click" />
                    <MenuItem Header="View" Name="interactionModeViewMenuItem" Click="interactionModeViewMenuItem_Click" />
                    <MenuItem Header="Author" Name="interactionModeAuthorMenuItem" Click="interactionModeAuthorMenuItem_Click" />
                </MenuItem>
                <MenuItem Header="Transformation Mode" Name="transformationModeMenuItem" >
                    <MenuItem Header="Rectangular" Name="transformationModeRectangularMenuItem" Click="transformationModeRectangularMenuItem_Click"/>
                    <MenuItem Header="Points" Name="transformationModePointsMenuItem" Click="transformationModePointsMenuItem_Click"/>
                    <MenuItem Header="Rectangular and Points" Name="transformationModeRectangularAndPointsMenuItem" Click="transformationModeRectangularAndPointsMenuItem_Click"/>
                </MenuItem>
                <Separator />
                <MenuItem Header="Presentation State" Name="presentationStateMenuItem">
                    <MenuItem Header="Load..." Name="presentationStateLoadMenuItem" Click="presentationStateLoadMenuItem_Click" />
                    <MenuItem Header="Info..." Name="presentationStateInfoMenuItem" Click="presentationStateInfoMenuItem_Click" />
                    <MenuItem Header="Save" Name="presentationStateSaveMenuItem" Click="presentationStateSaveMenuItem_Click" />
                    <MenuItem Header="Save To..." Name="presentationStateSaveToMenuItem" Click="presentationStateSaveToMenuItem_Click" />
                    <Separator />
                    <MenuItem Header="Load Automatically" Name="presentationState_loadAutomaticallyMenuItem" IsCheckable="True" IsChecked="False" />
                </MenuItem>
                <MenuItem Header="Binary Format" Name="binaryFormatMenuItem">
                    <MenuItem Header="Load..." Name="binaryFormatLoadMenuItem" Click="binaryFormatLoadMenuItem_Click" />
                    <MenuItem Header="Save To..." Name="binaryFormatSaveToMenuItem" Click="binaryFormatSaveToMenuItem_Click" />
                </MenuItem>
                <MenuItem Header="XMP Format" Name="xmpFormatMenuItem">
                    <MenuItem Header="Load..." Name="xmpFormatLoadMenuItem" Click="xmpFormatLoadMenuItem_Click" />
                    <MenuItem Header="Save To..." Name="xmpFormatSaveToMenuItem" Click="xmpFormatSaveToMenuItem_Click" />
                </MenuItem>
                <Separator />
                <MenuItem Header="Add" Name="addMenuItem">
                    <MenuItem Header="Point" Name="add_pointMenuItem" Click="addMenuItem_Click" />
                    <MenuItem Header="Circle" Name="add_circleMenuItem" Click="addMenuItem_Click" />
                    <MenuItem Header="Polyline" Name="add_polylineMenuItem" Click="addMenuItem_Click" />
                    <MenuItem Header="Interpolated" Name="add_interpolatedMenuItem" Click="addMenuItem_Click" />
                    <Separator />
                    <MenuItem Header="Rectangle" Name="add_rectangleMenuItem" Click="addMenuItem_Click" />
                    <MenuItem Header="Ellipse" Name="add_ellipseMenuItem" Click="addMenuItem_Click" />
                    <MenuItem Header="Multiline" Name="add_multilineMenuItem" Click="addMenuItem_Click" />
                    <MenuItem Header="Rangeline" Name="add_rangelineMenuItem" Click="addMenuItem_Click" />
                    <MenuItem Header="Infiniteline" Name="add_infinitelineMenuItem" Click="addMenuItem_Click" />
                    <MenuItem Header="Cutline" Name="add_cutlineMenuItem" Click="addMenuItem_Click" />
                    <MenuItem Header="Arrow" Name="add_arrowMenuItem" Click="addMenuItem_Click" />
                    <MenuItem Header="Axis" Name="add_axisMenuItem" Click="addMenuItem_Click" />
                    <MenuItem Header="Ruler" Name="add_rulerMenuItem" Click="addMenuItem_Click" />
                    <MenuItem Header="Crosshair" Name="add_crosshairMenuItem" Click="addMenuItem_Click" />
                    <Separator />
                    <MenuItem Header="Text" Name="add_textMenuItem" Click="addMenuItem_Click" />
                </MenuItem>
                <Separator />
                <MenuItem Header="Properties..." Name="propertiesMenuItem" Click="propertiesMenuItem_Click"/>
            </MenuItem>

            <MenuItem Header="Help" Name="helpMenuItem">
                <MenuItem HeaderStringFormat="{}{0} (F1)" Header="About..." Name="help_aboutMenuItem" Click="help_aboutMenuItem_Click" />
            </MenuItem>
        </Menu>

        <ToolBarTray Grid.Row="1" IsLocked="True" Name="toolBarTray1">
            <DicomViewerImaging:DicomAnnotatedViewerToolBar 
                Grid.Row="1"
                x:Name="dicomAnnotatedViewerToolBar" />
            
            <ToolBar Grid.Row="1" Background="Transparent" Name="voiLutToolBar" ToolBarTray.IsLocked="True">
                <Menu VerticalAlignment="Center" Background="Transparent">
                    <MenuItem Width="52">
                        <MenuItem.Header>
                            <StackPanel HorizontalAlignment="Left" Orientation="Horizontal" Margin="3,0">
                                <Image Source="{StaticResource VoiLutIcon}" Stretch="None" Width="16" Height="16" />
                                <Path VerticalAlignment="Center" Margin="5,0,0,0" Fill="Black" Data="M 0 0 L 4 4 L 8 0 Z"/>
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                </Menu>
            </ToolBar>

            <DicomViewerDemoControls:DicomViewerToolInteractionButtonToolBar
                Grid.Row="1"
                x:Name="dicomViewerToolInteractionButtonToolBar" />

            <CustomConstrols:ImageViewerToolBar
                Grid.Row="1" 
                x:Name="imageViewerToolBar" 
                CanNavigate="False"
                CanOpenFile="False"
                CanPrint="False" 
                CanSaveFile="False"
                OpenFile="imageViewerToolBar_OpenFile" />


            <DicomViewerDemoControls:AnnotationsToolBar Grid.Row="2" x:Name="annotationsToolBar" Band="1" />

            <ToolBar Band="1" BandIndex="1" Name="annotationInteractionModeToolBar">
                <TextBlock VerticalAlignment="Center" Margin="0,0,3,0">Annotation Interaction Mode</TextBlock>
                <ComboBox Name="annotationInteractionModeComboBox"
                          Width="121"
                          VerticalAlignment="Center"
                          SelectionChanged="annotationInteractionModeComboBox_SelectionChanged"/>
            </ToolBar>
        </ToolBarTray>

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="220" MinWidth="10" />
                <ColumnDefinition Width="*" MinWidth="10" />
            </Grid.ColumnDefinitions>

            <vsdui:WpfDicomSeriesManagerControl Grid.Column="0" x:Name="dicomSeriesManagerControl1"/>

            <GridSplitter Grid.Column="0" 
                          HorizontalAlignment="Right"
                          Width="5"
                          VerticalAlignment="Stretch"
                          ResizeDirection="Columns" />
            <ImagingControls:WpfImageViewer
                    Background="Black"
                    Grid.Column="1"
                    SizeMode="BestFit"
                    CenterImage="True"
                    AllowDrop="True"
                    Drop="imageViewer1_Drop"
                    DragOver="imageViewer1_Dragging"
                    DragEnter="imageViewer1_Dragging"
                    ImageLoadingProgress="imageViewer1_ImageLoadingProgress"
                    FocusedIndexChanged="imageViewer1_FocusedIndexChanged"
                    InputGestureCopy="{x:Null}"
                    InputGestureCut="{x:Null}"
                    InputGestureDelete="{x:Null}"
                    InputGestureInsert="{x:Null}"
                    IsKeyboardNavigationEnabled="True"
                    x:Name="imageViewer1" />
        </Grid>
        <DockPanel Grid.Row="3" Margin="3,0" Height="27" Name="InfoPanel">
            <ProgressBar DockPanel.Dock="Left" Width="215" Height="23" Visibility="Collapsed" Name="progressBar1" />
            <Label DockPanel.Dock="Left" Content="Action Label" VerticalAlignment="Center" Visibility="Collapsed" Name="actionLabel" />

            <Label DockPanel.Dock="Right" HorizontalAlignment="Right" VerticalAlignment="Center" Name="imageInfoStatusLabel" />
        </DockPanel>
    </Grid>
</Window>
